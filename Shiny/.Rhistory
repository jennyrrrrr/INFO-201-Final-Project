geom_line(aes(
y = Number_Undernourished,
x = Year), data = world_undernourished_df) +
scale_x_continuous(breaks=seq(1991,2017,2)) +
scale_y_continuous(labels = scales::comma)
theme(text=element_text(family="Tahoma"))
p1 + labs(title = "Global Number of People Who<br>Are Undernourished",
x = "Year", y = "Amount of People",
caption = "Source: UN FAO (2018); UN FAO (2017); World Bank (2017)")
}
# ======================================================
# Create heat map for rates of undernourishment
# ======================================================
# geo styling
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
geo <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
undernourished_p <- function(year) {
undernourished_df %>%
filter(Year == year) %>%
plot_geo() %>%
add_trace(
z = ~Percent_Undernourished, color = ~Percent_Undernourished, colors = 'Reds',
text = ~Entity, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Percent of Population', tickprefix = '%') %>%
layout(
title = paste("World Undernourishment in", year),
geo = geo
)
}
# ======================================================
# Create export df and heat map for global export values
# ======================================================
exp_df <- imp_exp_df %>%
group_by(Area, Element) %>%
summarize(Year = mean(Year), Value = sum(Value)) %>%
filter(Element == "Export Value Base Quantity")
imp_df <- imp_exp_df %>%
group_by(Area, Element) %>%
summarize(Year = mean(Year), Value = sum(Value)) %>%
filter(Element == "Import Value Base Period Quantity")
modified_imp_exp_df <- merge(exp_df,imp_df, by = "Area")
colnames(modified_imp_exp_df)[colnames(modified_imp_exp_df)=="Value.x"] <- "Export.Value"
colnames(modified_imp_exp_df)[colnames(modified_imp_exp_df)=="Value.y"] <- "Import.Value"
modified_imp_exp_df$Code <- countrycode(modified_imp_exp_df$Area, 'country.name', 'genc3c')
modified_imp_exp_df$imp_exp_difference <- modified_imp_exp_df$Export.Value - modified_imp_exp_df$Import.Value
# TODO: would ratio make more sense? I feel like numbers are hard to quantify, especially for large
# countries or small countries. A ratio of 1.5 for two different countries makes more sense than a +50 and a +50000
# (for a set of 100/150 and a set of 100000/150000, repectively)
geo <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
exports_p <- function(){
plot_geo(modified_imp_exp_df) %>%
add_trace(
z = ~Export.Value, color = ~Export.Value, colors = 'Greens',
text = ~Area, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Export Value Quantity', tickprefix = '$') %>%
layout(
title = 'Exports in 2017',
geo = geo
)
}
# ======================================================
# Import/Export Ratio per country vs hunger graph
# ======================================================
# Calculating ratio of import to export where the ratio = (import / export)
# Data is from 2017 ONLY
imp_exp_ratio <- merge(exp_df,imp_df, by = "Area")
colnames(imp_exp_ratio)[colnames(imp_exp_ratio)=="Value.x"] <- "Export.value"
colnames(imp_exp_ratio)[colnames(imp_exp_ratio)=="Value.y"] <- "Import.value"
imp_exp_ratio$Code <- countrycode(imp_exp_ratio$Area, 'country.name', 'genc3c')
recent_undernour <- undernourished_df %>%
filter(undernourished_df$Year == 2016)
joined_dataframe <- merge(imp_exp_ratio, recent_undernour, by="Code")
joined_dataframe$Relative_Trade <-
round((100 * joined_dataframe$Export.value / (joined_dataframe$Import.value + joined_dataframe$Export.value))
/ joined_dataframe$Percent_Undernourished, 2)
# Prepare regions df, only want code_3, continent, country columns
colnames(regions_df)[colnames(regions_df)=="code_3"] <- "Code"
colnames(regions_df)[colnames(regions_df)=="continent"] <- "Continent"
regions_df_cleaned <- regions_df %>%
select(Code, country, Continent)
# Add country/continent dataframe
primed_dataframe <- joined_dataframe %>%
select(Code, Area, Relative_Trade, Percent_Undernourished, Import.value, Export.value) %>%  #NOTE: HAVE TOTAL TRANSACTIONS IN HOVER INFO, ALONG WITH COUNTRY NAME, % RELATIVE, AND IMP/EXP NUMBERS
arrange(desc(Relative_Trade)) %>%
mutate(Area = factor(Area, Area))
joined_dataframe <- merge(joined_dataframe, regions_df_cleaned, by="Code")
joined_dataframe <- joined_dataframe %>%
arrange(desc(Relative_Trade))
p4 <-
ggplot(joined_dataframe, aes(x=reorder(Area, -Relative_Trade), y=Relative_Trade, fill = Continent,
text=paste("Country:", Area, "<br>", "Relative Trade:", Relative_Trade, "<br>",
"Import in $:", Import.value, "<br>",
"Export in $:", Export.value, "<br>", "Percent Undernourished:",
Percent_Undernourished))) +
theme_dark() +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(y = "Food Success Value (see analysis for more info)",
x = "Country",
title = "Food Success and Percent Undernourishment by Country") +
coord_flip() +
geom_col(aes(color = Continent), color = "black") + #can do just "aes(Continent)" or can have no parameter or aes(color = Continent.)
theme(plot.title = element_text(hjust = 0.5))
final_plot <- ggplotly(p4, tooltip = c("text"))
(final_plot)
#
# This is the user-interface definition of a Shiny web application. You can
# run the application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(plotly)
# Define UI for application that draws a histogram
ui <- shinyUI(fluidPage(
titlePanel("Interplay Between Food Importation/Exportation
and Hunger Statistics Around the Planet"),
navbarPage("Project: Hungry",
tabPanel("Global Undernourishment",
mainPanel(
plotlyOutput("globalratesPlot"),
"Human undernutrition â defined as dietary energy
consumption that falls under the minimum energy
requirement defined as necessary[1] â and hunger are
issues that are prevalent even today. As
you can see from the graph above, global rates of
malnutrition are still very high and in recent years have
reversed from steadily decreasing to increasing. By
nature of this human problem, all humans are direct
stakeholders in this issue: should food supply run short,
people will starve. This also means that the whole of
humanity is indirect stakeholders as well, with aligning
values. Without proper nutrition and hunger, people
cannot begin to focus on more intellectual pursuits that
involve the advancement of society, instead of focusing
their efforts on self-survival.",
br(),
br(),
withTags(b("Here we will explore how
one countryâs malnutrition rate is related to the amount
of the countryâs food supply that is imported and
exported.")),
)
),
tabPanel("Undernourishment ", sidebarLayout(
position = "right",
sidebarPanel("This is going to be the analysis
for the graphs"
),
# Show a plot of the generated distribution
mainPanel(fluidRow(
column(3,sliderInput("year",
"Year:",
sep = "",
min = 2000,
max = 2016,
value = 2016)),
column(12,plotlyOutput("undernourishPlot")),
column(12,plotlyOutput("exportsPlot"))
))
)
),
tabPanel("Analysis: Hunger vs. Food Trade",
mainPanel(
plotlyOutput(final_plot, height = 1200))),
tabPanel("References",
mainPanel(
"Dataset 1:",
a("Imports and exports",
href =
"http://www.fao.org/faostat/en/#data/TI"),
br(),
"Created by the Food and Agriculture Organization of the
United Nations (FAO), this trade database includes
observations as countries with the following variables:
year, export quantity, export value, import quantity and
import value (all of the foodstuffs). The trade database
includes all food and agricultural products
imported/exported annually by all the countries in the
world.
This dataset is approximately 650 observations. It is
great for a short span of time (the entries are from
2017), but will not be very indicative of the past.",
br(),br(),
"Dataset 2:",
a("Undernourishment by country",
href = "https://ourworldindata.org/grapher/prevalence-of-undernourishment"),
br(),
"This dataset measures the share of the population that
has a caloric intake which is insufficient to meet the
minimum energy requirements necessary for a given
individual. Countries with undernourishment under 2.5% are
automatically given a value of 2.5%. This may be a
weakness â hypothetically, a stellar country where no one
is undernourished will still have a 2.5% undernourishment
rate â small, but noticeable nonetheless.",
br(),br(),
"Dataset 3:",
a("Global amount of undernourishment",
href =
"https://ourworldindata.org/grapher/global-population-defined-as-undernourished?time=1991..2017"),
br(),
"Gathered by ourworldindata, this dataset details the
total number of people who are defined as undernourished
in the world. An individual is considered to be
undernourished when dietary energy consumption is less
than a pre-determined threshold. This threshold is
country-specific and is measured in terms of the number
of kilocalories required to conduct sedentary or light
activities. A weakness of this data is that the
definition of how many kilocalories are required per
person are needed per day may be off. For example,
perhaps individuals burn more calories in the heat and
temperature of a country was not considered in the data."
)
)
),
))
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(plotly)
source("analysis.R")
# Define server logic required to draw a histogram
server <- shinyServer(function(input, output) {
output$undernourishPlot <- renderPlotly({
undernourished_p(input$year)
})
output$exportsPlot <- renderPlotly({
exports_p()
})
output$globalratesPlot <- renderPlotly({
globalrates_p()
})
output$final_plot <- renderPlotly(final_plot)
})
runApp()
runApp()
library(dplyr)
library(plotly)
library(ggplot2)
library(ggmap)
library(countrycode)
library(shiny)
# ======================================================
# Read in data
# ======================================================
undernourished_df <- read.csv("Data/prevalence-of-undernourishment.csv")
colnames(undernourished_df)[colnames(undernourished_df) == "Prevalence.of.undernourishment....of.population.....of.population."] <- "Percent_Undernourished"
imp_exp_df <- read.csv("Data/FAOSTAT_data_11-13-2019.csv")
world_undernourished_df <- read.csv("Data/undernourished.csv",
stringsAsFactors = FALSE)
colnames(world_undernourished_df)[colnames(world_undernourished_df) == "Number.of.people.undernourished..FAO.SOFI..2018....World.Bank..2017.."] <- "Number_Undernourished"
regions_df <- read.csv("Data/countryContinent.csv")
# ======================================================
# Global number of people who are undernourished line graph.
# ======================================================
globalrates_p <- function() {
p1 <- ggplot() +
geom_line(aes(
y = Number_Undernourished,
x = Year), data = world_undernourished_df) +
scale_x_continuous(breaks=seq(1991,2017,2)) +
scale_y_continuous(labels = scales::comma)
theme(text=element_text(family="Tahoma"))
p1 + labs(title = "Global Number of People Who<br>Are Undernourished",
x = "Year", y = "Amount of People",
caption = "Source: UN FAO (2018); UN FAO (2017); World Bank (2017)")
}
# ======================================================
# Create heat map for rates of undernourishment
# ======================================================
# geo styling
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
geo <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
undernourished_p <- function(year) {
undernourished_df %>%
filter(Year == year) %>%
plot_geo() %>%
add_trace(
z = ~Percent_Undernourished, color = ~Percent_Undernourished, colors = 'Reds',
text = ~Entity, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Percent of Population', tickprefix = '%') %>%
layout(
title = paste("World Undernourishment in", year),
geo = geo
)
}
# ======================================================
# Create export df and heat map for global export values
# ======================================================
exp_df <- imp_exp_df %>%
group_by(Area, Element) %>%
summarize(Year = mean(Year), Value = sum(Value)) %>%
filter(Element == "Export Value Base Quantity")
imp_df <- imp_exp_df %>%
group_by(Area, Element) %>%
summarize(Year = mean(Year), Value = sum(Value)) %>%
filter(Element == "Import Value Base Period Quantity")
modified_imp_exp_df <- merge(exp_df,imp_df, by = "Area")
colnames(modified_imp_exp_df)[colnames(modified_imp_exp_df)=="Value.x"] <- "Export.Value"
colnames(modified_imp_exp_df)[colnames(modified_imp_exp_df)=="Value.y"] <- "Import.Value"
modified_imp_exp_df$Code <- countrycode(modified_imp_exp_df$Area, 'country.name', 'genc3c')
modified_imp_exp_df$imp_exp_difference <- modified_imp_exp_df$Export.Value - modified_imp_exp_df$Import.Value
# TODO: would ratio make more sense? I feel like numbers are hard to quantify, especially for large
# countries or small countries. A ratio of 1.5 for two different countries makes more sense than a +50 and a +50000
# (for a set of 100/150 and a set of 100000/150000, repectively)
geo <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
exports_p <- function(){
plot_geo(modified_imp_exp_df) %>%
add_trace(
z = ~Export.Value, color = ~Export.Value, colors = 'Greens',
text = ~Area, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Export Value Quantity', tickprefix = '$') %>%
layout(
title = 'Exports in 2017',
geo = geo
)
}
# ======================================================
# Import/Export Ratio per country vs hunger graph
# ======================================================
# Calculating ratio of import to export where the ratio = (import / export)
# Data is from 2017 ONLY
imp_exp_ratio <- merge(exp_df,imp_df, by = "Area")
colnames(imp_exp_ratio)[colnames(imp_exp_ratio)=="Value.x"] <- "Export.value"
colnames(imp_exp_ratio)[colnames(imp_exp_ratio)=="Value.y"] <- "Import.value"
imp_exp_ratio$Code <- countrycode(imp_exp_ratio$Area, 'country.name', 'genc3c')
recent_undernour <- undernourished_df %>%
filter(undernourished_df$Year == 2016)
joined_dataframe <- merge(imp_exp_ratio, recent_undernour, by="Code")
joined_dataframe$Relative_Trade <-
round((100 * joined_dataframe$Export.value / (joined_dataframe$Import.value + joined_dataframe$Export.value))
/ joined_dataframe$Percent_Undernourished, 2)
# Prepare regions df, only want code_3, continent, country columns
colnames(regions_df)[colnames(regions_df)=="code_3"] <- "Code"
colnames(regions_df)[colnames(regions_df)=="continent"] <- "Continent"
regions_df_cleaned <- regions_df %>%
select(Code, country, Continent)
# Add country/continent dataframe
primed_dataframe <- joined_dataframe %>%
select(Code, Area, Relative_Trade, Percent_Undernourished, Import.value, Export.value) %>%  #NOTE: HAVE TOTAL TRANSACTIONS IN HOVER INFO, ALONG WITH COUNTRY NAME, % RELATIVE, AND IMP/EXP NUMBERS
arrange(desc(Relative_Trade)) %>%
mutate(Area = factor(Area, Area))
joined_dataframe <- merge(joined_dataframe, regions_df_cleaned, by="Code")
joined_dataframe <- joined_dataframe %>%
arrange(desc(Relative_Trade))
p4 <-
ggplot(joined_dataframe, aes(x=reorder(Area, -Relative_Trade), y=Relative_Trade, fill = Continent,
text=paste("Country:", Area, "<br>", "Relative Trade:", Relative_Trade, "<br>",
"Import in $:", Import.value, "<br>",
"Export in $:", Export.value, "<br>", "Percent Undernourished:",
Percent_Undernourished))) +
theme_dark() +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(y = "Food Success Value (see analysis for more info)",
x = "Country",
title = "Food Success and Percent Undernourishment by Country") +
coord_flip() +
geom_col(aes(color = Continent), color = "black") + #can do just "aes(Continent)" or can have no parameter or aes(color = Continent.)
theme(plot.title = element_text(hjust = 0.5))
final_plot <- ggplotly(p4, tooltip = c("text"))
source('C:/Users/Ryan/Desktop/INFO-201/Shiny/analysis.R', echo=TRUE)
(final_plot)
#
# This is the user-interface definition of a Shiny web application. You can
# run the application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(plotly)
# Define UI for application that draws a histogram
ui <- shinyUI(fluidPage(
titlePanel("Interplay Between Food Importation/Exportation
and Hunger Statistics Around the Planet"),
navbarPage("Project: Hungry",
tabPanel("Global Undernourishment",
mainPanel(
plotlyOutput("globalratesPlot"),
"Human undernutrition â defined as dietary energy
consumption that falls under the minimum energy
requirement defined as necessary[1] â and hunger are
issues that are prevalent even today. As
you can see from the graph above, global rates of
malnutrition are still very high and in recent years have
reversed from steadily decreasing to increasing. By
nature of this human problem, all humans are direct
stakeholders in this issue: should food supply run short,
people will starve. This also means that the whole of
humanity is indirect stakeholders as well, with aligning
values. Without proper nutrition and hunger, people
cannot begin to focus on more intellectual pursuits that
involve the advancement of society, instead of focusing
their efforts on self-survival.",
br(),
br(),
withTags(b("Here we will explore how
one countryâs malnutrition rate is related to the amount
of the countryâs food supply that is imported and
exported.")),
)
),
tabPanel("Undernourishment ", sidebarLayout(
position = "right",
sidebarPanel("This is going to be the analysis
for the graphs"
),
# Show a plot of the generated distribution
mainPanel(fluidRow(
column(3,sliderInput("year",
"Year:",
sep = "",
min = 2000,
max = 2016,
value = 2016)),
column(12,plotlyOutput("undernourishPlot")),
column(12,plotlyOutput("exportsPlot"))
))
)
),
tabPanel("Analysis: Hunger vs. Food Trade",
mainPanel(
plotlyOutput(final_plot, height = 1200))),
tabPanel("References",
mainPanel(
"Dataset 1:",
a("Imports and exports",
href =
"http://www.fao.org/faostat/en/#data/TI"),
br(),
"Created by the Food and Agriculture Organization of the
United Nations (FAO), this trade database includes
observations as countries with the following variables:
year, export quantity, export value, import quantity and
import value (all of the foodstuffs). The trade database
includes all food and agricultural products
imported/exported annually by all the countries in the
world.
This dataset is approximately 650 observations. It is
great for a short span of time (the entries are from
2017), but will not be very indicative of the past.",
br(),br(),
"Dataset 2:",
a("Undernourishment by country",
href = "https://ourworldindata.org/grapher/prevalence-of-undernourishment"),
br(),
"This dataset measures the share of the population that
has a caloric intake which is insufficient to meet the
minimum energy requirements necessary for a given
individual. Countries with undernourishment under 2.5% are
automatically given a value of 2.5%. This may be a
weakness â hypothetically, a stellar country where no one
is undernourished will still have a 2.5% undernourishment
rate â small, but noticeable nonetheless.",
br(),br(),
"Dataset 3:",
a("Global amount of undernourishment",
href =
"https://ourworldindata.org/grapher/global-population-defined-as-undernourished?time=1991..2017"),
br(),
"Gathered by ourworldindata, this dataset details the
total number of people who are defined as undernourished
in the world. An individual is considered to be
undernourished when dietary energy consumption is less
than a pre-determined threshold. This threshold is
country-specific and is measured in terms of the number
of kilocalories required to conduct sedentary or light
activities. A weakness of this data is that the
definition of how many kilocalories are required per
person are needed per day may be off. For example,
perhaps individuals burn more calories in the heat and
temperature of a country was not considered in the data."
)
)
),
))
runApp()
runApp()
